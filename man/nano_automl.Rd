% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nano_automl.R
\name{nano_automl}
\alias{nano_automl}
\title{Building Automated H2O Models}
\usage{
nano_automl(
  nano = nano::create_nano(),
  response,
  data,
  test,
  train_test = NA,
  ignore_vars = c(),
  weight_column = NULL,
  fold_column = NULL,
  nfolds = NA,
  max_models = 3,
  max_time = 10 * 60,
  thresh = 10,
  monotone_constraints = NULL,
  exclude_algos = c("StackedEnsemble", "DeepLearning"),
  include_algos = NULL,
  plots = TRUE,
  alarm = TRUE,
  quiet = FALSE,
  save = FALSE,
  subdir = NA,
  project = "ML Project",
  seed = 628,
  project_name = paste0("grid_", nano$n_model + 1),
  grid_description = "",
  ...
)
}
\arguments{
\item{nano}{nano object to store model in. If not specified, a new nano object will be
created the results will be stored in the new nano object.}

\item{response}{a character. Target variable for model.}

\item{data}{a data.frame containing data to train model. May also contain testing and
holdout data, in which case, the \code{train_test} must be specified.}

\item{test}{a data.frame containing testing dataset. If this is provided, the \code{train_test},
\code{fold_column} and \code{nfolds} arguments cannot be used.}

\item{train_test}{a character. Variable in \code{data} which contains split for training,
testing and holdout datasets (optional). Can only have the values: "training", "test",
"holdout".}

\item{ignore_vars}{vector of characters. Variables in the dataset which should not be used
for modelling. Note, if any of \code{train_test}, \code{weight_column} or \code{fold_column} arguments
are specified, those variables will be automatically included in \code{ignore_vars}.}

\item{weight_column}{a character. Column name in \code{data} containing weights if used.}

\item{fold_column}{a character. Column name in \code{data} containing fold assignments if used.
If this is provided, the \code{test} and \code{nfolds} arguments cannot be used. The \code{train_test}
argument can be used, however it cannot contain the values "test".}

\item{nfolds}{a numeric. Number of folds used in cross-validation. If this is provided, the
\code{test} and \code{nfolds} arguments cannot be used. The \code{train_test} argument can be used,
however it cannot contain the values "test".}

\item{max_models}{a numeric. Maximum number of models to be built.}

\item{max_time}{a numeric. Maximum amount of time spent building models.}

\item{thresh}{a numeric. Cutoff of number of unique values in response variable to
determine whether performing classification or regression. Default value is 10.}

\item{monotone_constraints}{a list. Mapping between variable names in \code{data} to values
+1 or -1. Use +1 to enforce an increasing constraint while use -1 for a decreasing
constraint. Constraints are only valid for numerical columns.}

\item{exclude_algos}{a vector of characters. Algorithms which should be excluding from
training process.}

\item{include_algos}{a vector of characters. Algorithms to be included in training process.
Set to \code{NULL} to ignore. If \code{exclude_algos} and \code{include_algos} are both provided,
only \code{include_algos} will be used.}

\item{plots}{a logical. Whether to produce plots.}

\item{alarm}{a logical. Whether to beep when function has finished running.}

\item{quiet}{a logical. Whether to print messages to the console.}

\item{seed}{a numeric.}

\item{grid_description}{a character. Optional description of grid. Can be later accessed by
\code{nano$grid[[grid_no]]@meta$description}.}

\item{...}{further parameters to pass to \code{h2o.grid} depending on \code{algo}.}
}
\value{
nano object with new entry filled with models produced.
}
\description{
Creates robust, fast models using \code{H2O}'s \code{h2o.automl} function
implemented with \code{nano} objects.
}
\details{
This function used \code{H2O}'s \code{h2o.automl} function to easily and quickly build
several different machine learning models. Importantly, an active H2O connection is
required (i.e. run \code{h2o.init()})) before using this function.

For more details, please see the documentation for \code{h2o.automl}.
}
\examples{
\dontrun{
if(interactive()){
 library(h2o)
 library(nano)
 
 h2o.init()
 
 # import dataset
 data(property_prices)
 # prepare data for modelling
 data_all <- nano::data_prep(data          = property_prices, 
                             response      = "sale_price",
                             split_or_fold = 0.7,
                             holdout_ratio = 0.1)
 data <- data_all$data
 
 # create models
 nano <- nano_automl(data         = data, 
                     response     = "sale_price", 
                     train_test   = "data_id",
                     ignore_vars = "data_id")
 
 }
}
}
