% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nano_constructors.R
\name{new_nano}
\alias{new_nano}
\alias{validate_nano}
\alias{create_nano}
\title{Creating Nano Object}
\usage{
new_nano(
  x = list(grid = rep(list(NA), 10), model = rep(list(NA), 10), data =
    rep(data.table(NA), 10), varimp = rep(list(NA), 10), pdp = rep(list(NA), 10), ice =
    rep(list(NA), 10), interaction = rep(list(NA), 10), meta = rep(list(NA), 10), n_model
    = as.integer(0))
)

validate_nano(x)

create_nano(
  grid = rep(list(NA), 10),
  model = rep(list(NA), 10),
  data = rep(data.table(NA), 10),
  varimp = rep(list(NA), 10),
  pdp = rep(list(NA), 10),
  ice = rep(list(NA), 10),
  interaction = rep(list(NA), 10),
  meta = rep(list(NA), 10),
  n_model = as.integer(length(grid) - sum(sapply(grid, typeof) == "logical"))
)
}
\arguments{
\item{x}{list of lists with elements containing the below parameters.}

\item{grid}{list of grids created by \code{h2o}.}

\item{model}{list of models created by \code{h2o}, belonging to their respective grids.}

\item{data}{list of datasets used to create each model.}

\item{varimp}{list of datasets containing variable importance for each model.}

\item{pdp}{list of datasets containing partial dependencies for each model.}

\item{ice}{list of datasets containing initial conditional expectations for each model.}

\item{interaction}{list of datasets containing interactions for each model.}

\item{meta}{list of lists containing meta information for each model such as parameters,
hyper-parameters and model type.}

\item{n_model}{number of created models.}
}
\value{
a \code{nano} object
}
\description{
constructors for \code{nano} object
}
\details{
Creates a \code{nano} objected which consists of a list of list. If no arguments are
supplied, \code{nano} object is created with 10 elements initialised for each list. If supplying
arguments, must supply arguments for \code{grid} and \code{data}. These must be in list format. If the
underlying datasets for each grid are identical, then it is sufficient to only enter \code{data}
as a list of a single dataset. If supplying the above arguments, it is optional to include
'model', 'varimp', 'pdp', \code{ice}, 'interaction' and 'meta\verb{. In fact, it is recommended to not provide }meta` since has a strict structure which other functions are dependent on, and will
be calculated automatically if not provided.

If 'model' is not supplied, then by default, model' will be taken as the best model from 'grid'.
If 'varimp', 'pdp', \code{ice} or \code{interaction} are not supplied, they will be initialised as NA.
When supplying arguments, extra elements will be initialised so total number of elements for
each list is 10.
}
\examples{
\dontrun{
if(interactive()){
 library(h2o)
 library(nano)
 
 h2o.init()
 
 # import dataset
 data(property_prices)
 train <- as.h2o(property_prices)
 
 # set the response and predictors
 response <- "sale_price"
 var <- setdiff(colnames(property_prices), response)
 
 # build grids
 grid_1 <- h2o.grid(x               = var,
                    y               = response,
                    training_frame  = train,
                    algorithm       = "randomForest",
                    hyper_params    = list(ntrees = 1:2),
                    nfolds          = 3,
                    seed            = 628)

 grid_2 <- h2o.grid(x               = var,
                    y               = response,
                    training_frame  = train,
                    algorithm       = "randomForest",
                    hyper_params    = list(ntrees = 3:4),
                    nfolds          = 3,
                    seed            = 628)

 
 obj <- create_nano(grid = list(grid_1, grid_2),
                    data = list(property_prices), # since underlying dataset is the same 
                    ) # since model is not entered, will take best model from grids
 }
}
}
